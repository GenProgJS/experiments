Generation: 23
Elapsed time: 16815.38750076294sec
# of failed test cases in developer-fixed version: 1
# of failed test cases in current version: 1
List of applied operators:
CallChangerOperator; return pattern.replace(/\/[^\/]*[\*\(].*$/, 'fileList') || '/';
NullCheckOperator; return pattern.replace(/\/[^\/]*[\*\(].*$/, 'fileList') && pattern.replace(/\/[^\/]*[\*\(].*$/, 'fileList') || '/';
ExprReplacerOperator; return pattern.replace(/\/[^\/]*[\*\(].*$/, 'fileList') && pattern.replace(/\/[^\/]*[\*\(].*$/, 'fileList') || '/' || '/';
CallChangerOperator; return pattern.replace(/\/[^\/]*[\*\(].*$/, watchPatterns) && pattern.replace(/\/[^\/]*[\*\(].*$/, 'fileList') || '/' || '/';
CallChangerOperator; return pattern.replace('add', '', chokidar) || '/';
BinaryOperatorChanger; return pattern.replace('add', '', chokidar) ** '/';