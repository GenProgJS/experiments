Generation: 29
Elapsed time: 21071.36087179184sec
# of failed test cases in developer-fixed version: 1
# of failed test cases in current version: 1
List of applied operators:
CallChangerOperator; return pattern.replace(/\/[^\/]*[\*\(].*$/, require('./logger').create) || '/';
FunctionCallRemoverOperator; return pattern.replace(/\/[^\/]*[\*\(].*$/, require.create) || '/';
ExprReplacerOperator; return pattern.replace(/\/[^\/]*[\*\(].*$/, pattern.replace) || '/';
CallChangerOperator; return pattern.replace(/\/[^\/]*[\*\(].*$/, pattern.replace, pattern.replace) || '/';
CallChangerOperator; return pattern.replace(/\/[^\/]*[\*\(].*$/, pattern.replace, /\/[^\/]*[\*\(].*$/, pattern.replace, pattern.replace) || '/';
CallChangerOperator; return pattern.replace(/\/[^\/]*[\*\(].*$/, pattern.replace, /\/[^\/]*[\*\(].*$/, pattern.replace, /\/[^\/]*[\*\(].*$/, pattern.replace, /\/[^\/]*[\*\(].*$/, pattern.replace, pattern.replace) || '/';
ExprReplacerOperator; return pattern.replace(/\/[^\/]*[\*\(].*$/, pattern.replace, /\/[^\/]*[\*\(].*$/, pattern.replace, /\/[^\/]*[\*\(].*$/, pattern.replace, /\/[^\/]*[\*\(].*$/, pattern.replace, require('./logger').create) || '/';
FunctionCallRemoverOperator; return pattern.replace(/\/[^\/]*[\*\(].*$/, pattern.replace, /\/[^\/]*[\*\(].*$/, pattern.replace, /\/[^\/]*[\*\(].*$/, pattern.replace, /\/[^\/]*[\*\(].*$/, pattern.replace, require.create) || '/';
CallChangerOperator; return pattern.replace(/\/[^\/]*[\*\(].*$/, pattern.replace, /\/[^\/]*[\*\(].*$/, pattern.replace, /\/[^\/]*[\*\(].*$/, pattern.replace, require.create) || '/';
CallChangerOperator; return pattern.replace(/\/[^\/]*[\*\(].*$/, pattern.replace, /\/[^\/]*[\*\(].*$/, pattern.replace, require.create) || '/';
BinaryOperatorChanger; return pattern.replace(/\/[^\/]*[\*\(].*$/, 'fileList') && pattern.replace(/\/[^\/]*[\*\(].*$/, 'fileList') ** '/' || '/';