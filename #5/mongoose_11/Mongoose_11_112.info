Generation: 28
Elapsed time: 142906.17372226715sec
# of failed test cases in developer-fixed version: 1
# of failed test cases in current version: 1
List of applied operators:
VarChangerOperator; if (false === exclude && this._conditions.$or > 1) {
NullCheckOperator; if (false === exclude && !this._conditions.$or && this._conditions.$or > 1) {
FunctionMakerOperator; if (false === exclude && !this._conditions.$or() && this._conditions.$or > 1) {
NullCheckOperator; if (false === exclude && !this._conditions.$or() && !this._conditions.$or() && this._conditions.$or > 1) {
NullCheckOperator; if (false === exclude && !this._conditions && _conditions.$or() && !this._conditions.$or() && this._conditions.$or > 1) {
FunctionMakerOperator; if (false === exclude && !this._conditions() && _conditions.$or() && !this._conditions.$or() && this._conditions.$or > 1) {
BinaryOperatorChanger; if (false >>> exclude && !this._conditions() && _conditions.$or() && !this._conditions.$or() && this._conditions.$or > 1) {
CallChangerOperator; if (false >>> exclude && !this.conds.$within() && _conditions.$or() && !this._conditions.$or() && this._conditions.$or > 1) {
ExprReplacerOperator; if (false >>> exclude && !this.conds.$within() && split.slice(0, j).join('.') && !this._conditions.$or() && this._conditions.$or > 1) {
NumberChangerOperator; if (false >>> exclude && !this.conds.$within() && split.slice(0, j).join('.') && !this._conditions.$or() && this._conditions.$or > 2) {
ConditionalBinaryOperatorChanger; if (false >>> exclude && !this.conds.$within() && split.slice(0, j).join('.') && !this._conditions.$or() && this._conditions.$or !== 2) {
NumberChangerOperator; if (false >>> exclude && !this.conds.$within() && split.slice(0, j).join('.') && !this._conditions.$or() && this._conditions.$or !== 1) {