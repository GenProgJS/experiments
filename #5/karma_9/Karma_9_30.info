Generation: 29
Elapsed time: 19767.291661262512sec
# of failed test cases in developer-fixed version: 1
# of failed test cases in current version: 1
List of applied operators:
CallChangerOperator; return pattern.replace(/\/[^\/]*[\*\(].*$/, require) || '/';
CallChangerOperator; return pattern.replace(/\/[^\/]*[\*\(].*$/, /\/[^\/]*[\*\(].*$/, require) || '/';
NullCheckOperator; return pattern.replace(/\/[^\/]*[\*\(].*$/, /\/[^\/]*[\*\(].*$/, require) && pattern.replace(/\/[^\/]*[\*\(].*$/, /\/[^\/]*[\*\(].*$/, require) || '/';
BinaryOperatorChanger; return pattern.replace(/\/[^\/]*[\*\(].*$/, /\/[^\/]*[\*\(].*$/, require) || pattern.replace(/\/[^\/]*[\*\(].*$/, /\/[^\/]*[\*\(].*$/, require) || '/';
CallChangerOperator; return pattern.replace(/\/[^\/]*[\*\(].*$/, pattern.watched) && pattern.replace(/\/[^\/]*[\*\(].*$/, /\/[^\/]*[\*\(].*$/, require) || '/';
CallChangerOperator; return pattern.replace(/\/[^\/]*[\*\(].*$/, pattern.watched) && pattern.replace(/\/[^\/]*[\*\(].*$/, require) || '/';
CallChangerOperator; return pattern.replace(/\/[^\/]*[\*\(].*$/, log.debug) && pattern.replace(/\/[^\/]*[\*\(].*$/, require) || '/';
CallChangerOperator; return pattern.replace('path', log.debug) && pattern.replace(/\/[^\/]*[\*\(].*$/, require) || '/';
BinaryOperatorChanger; return pattern.replace('path', log.debug) ** pattern.replace(/\/[^\/]*[\*\(].*$/, require) || '/';