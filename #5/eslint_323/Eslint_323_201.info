Generation: 26
Elapsed time: 44261.09706020355sec
# of failed test cases in developer-fixed version: 17
# of failed test cases in current version: 17
List of applied operators:
LogicalExprChangerOperator; } else if (definition.type === "Parameter" || node.type === "FunctionDeclaration") {
NullCheckOperator; } else if (definition.type === "Parameter" || node.type && node.type === "FunctionDeclaration") {
ConditionalBinaryOperatorChanger; } else if (definition.type === "Parameter" || node.type && node.type < "FunctionDeclaration") {
ConditionalBinaryOperatorChanger; } else if (definition.type === "Parameter" || node.type && node.type != "FunctionDeclaration") {
BinaryOperatorChanger; } else if (definition.type === "Parameter" || node.type | node.type != "FunctionDeclaration") {
BitwiseBinaryOperatorChanger; } else if (definition.type === "Parameter" || node.type ^ node.type != "FunctionDeclaration") {
BinaryOperatorChanger; } else if (definition.type === "Parameter" || node.type ^ node.type !== "FunctionDeclaration") {
BitwiseBinaryOperatorChanger; } else if (definition.type === "Parameter" || node.type | node.type !== "FunctionDeclaration") {
ConditionalBinaryOperatorChanger; } else if (definition.type == "Parameter" || node.type | node.type !== "FunctionDeclaration") {
NullCheckOperator; } else if (definition.type == "Parameter" || node && node.type | node.type !== "FunctionDeclaration") {
BinaryOperatorChanger; } else if (definition.type == "Parameter" || node == node.type | node.type !== "FunctionDeclaration") {
BinaryOperatorChanger; } else if (definition.type == "Parameter" || node ** node.type | node.type !== "FunctionDeclaration") {
ArithmeticBinaryOperatorChanger; } else if (definition.type == "Parameter" || node - node.type | node.type !== "FunctionDeclaration") {
BinaryOperatorChanger; } else if (definition.type == "Parameter" || node >> node.type | node.type !== "FunctionDeclaration") {
NullCheckOperator; } else if (definition.type == "Parameter" || node >> !node.type && node.type | node.type !== "FunctionDeclaration") {