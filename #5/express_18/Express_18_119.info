Generation: 28
Elapsed time: 18192.375644207sec
# of failed test cases in developer-fixed version: 7
# of failed test cases in current version: 7
List of applied operators:
VarChangerOperator; if (paramCalled && (paramCalled.error || paramCalled.match === req.params[name])) {
ExprReplacerOperator; if (paramCalled && (paramCalled && (paramCalled.error || paramCalled.match === req.params[name]))) {
ConditionalBinaryOperatorChanger; if (paramCalled && (paramCalled && (paramCalled.error || paramCalled.match == req.params[name]))) {
NullCheckOperator; if (paramCalled && (paramCalled && (paramCalled.error || paramCalled.match == req.params[name && name]))) {
LogicalExprChangerOperator; if (paramCalled && (paramCalled && (paramCalled.error || paramCalled.match == req.params[name || name]))) {
ArraySubscripterOperator; if (paramCalled && (paramCalled && (paramCalled.error || paramCalled.match == req.params[name || name % req.params.length]))) {
ArithmeticBinaryOperatorChanger; if (paramCalled && (paramCalled && (paramCalled.error || paramCalled.match == req.params[name || name / req.params.length]))) {
ArraySubscripterOperator; if (paramCalled && (paramCalled && (paramCalled.error || paramCalled.match == req.params[name || name / req.params.length >= 0 ? name || name / req.params.length < req.params.length ? name || name / req.params.length : req.params.length - 1 : 0]))) {
ArithmeticBinaryOperatorChanger; if (paramCalled && (paramCalled && (paramCalled.error || paramCalled.match == req.params[name || name / req.params.length >= 0 ? name || name / req.params.length < req.params.length ? name || name ** req.params.length : req.params.length - 1 : 0]))) {
ArithmeticBinaryOperatorChanger; if (paramCalled && (paramCalled && (paramCalled.error || paramCalled.match == req.params[name || name - req.params.length >= 0 ? name || name / req.params.length < req.params.length ? name || name ** req.params.length : req.params.length - 1 : 0]))) {
ArithmeticBinaryOperatorChanger; if (paramCalled && (paramCalled && (paramCalled.error || paramCalled.match == req.params[name || name % req.params.length >= 0 ? name || name / req.params.length < req.params.length ? name || name ** req.params.length : req.params.length - 1 : 0]))) {
ArithmeticBinaryOperatorChanger; if (paramCalled && (paramCalled && (paramCalled.error || paramCalled.match == req.params[name || name % req.params.length >= 0 ? name || name / req.params.length < req.params.length ? name || name + req.params.length : req.params.length - 1 : 0]))) {
ArithmeticBinaryOperatorChanger; if (paramCalled && (paramCalled && (paramCalled.error || paramCalled.match == req.params[name || name % req.params.length >= 0 ? name || name / req.params.length < req.params.length ? name || name - req.params.length : req.params.length - 1 : 0]))) {
ArithmeticBinaryOperatorChanger; if (paramCalled && (paramCalled && (paramCalled.error || paramCalled.match == req.params[name || name ** req.params.length >= 0 ? name || name / req.params.length < req.params.length ? name || name - req.params.length : req.params.length - 1 : 0]))) {
ArraySubscripterOperator; if (paramCalled && (paramCalled && (paramCalled.error || paramCalled.match == req.params[name || name ** req.params.length >= 0 ? name || name / req.params.length < req.params.length ? name || name - req.params.length : req.params.length - 1 : 0 >= 0 ? name || name ** req.params.length >= 0 ? name || name / req.params.length < req.params.length ? name || name - req.params.length : req.params.length - 1 : 0 < req.params.length ? name || name ** req.params.length >= 0 ? name || name / req.params.length < req.params.length ? name || name - req.params.length : req.params.length - 1 : 0 : req.params.length - 1 : 0]))) {
BinaryOperatorChanger; if (paramCalled && (paramCalled && (paramCalled.error | paramCalled.match == req.params[name || name ** req.params.length >= 0 ? name || name / req.params.length < req.params.length ? name || name - req.params.length : req.params.length - 1 : 0 >= 0 ? name || name ** req.params.length >= 0 ? name || name / req.params.length < req.params.length ? name || name - req.params.length : req.params.length - 1 : 0 < req.params.length ? name || name ** req.params.length >= 0 ? name || name / req.params.length < req.params.length ? name || name - req.params.length : req.params.length - 1 : 0 : req.params.length - 1 : 0]))) {