Generation: 29
Elapsed time: 16343.986985683441sec
# of failed test cases in developer-fixed version: 7
# of failed test cases in current version: 7
List of applied operators:
TreeCrossoverOperator; if (paramCalled && (paramCalled.error || paramCalled.match === paramVal) && (paramCalled.error || paramCalled.match === paramVal)) {; parents; if (paramCalled && (paramCalled.error || paramCalled.match === paramVal)) {; if (paramCalled && (paramCalled.error || paramCalled.match === paramVal)) {
ExprReplacerOperator; if (paramCalled && (paramCalled.error || paramCalled.match === paramVal) && (parseUrl(req).pathname || paramCalled.match === paramVal)) {
ConditionalBinaryOperatorChanger; if (paramCalled && (paramCalled.error || paramCalled.match === paramVal) && (parseUrl(req).pathname || paramCalled.match <= paramVal)) {
ExprReplacerOperator; if (paramCalled && (paramCalled.error || paramCalled.match === paramVal) && (parseUrl(req).pathname || this._params.push <= paramVal)) {
BinaryOperatorChanger; if (paramCalled && (paramCalled.error || paramCalled.match === paramVal) && (parseUrl(req).pathname || this._params.push % paramVal)) {
ArithmeticBinaryOperatorChanger; if (paramCalled && (paramCalled.error || paramCalled.match === paramVal) && (parseUrl(req).pathname || this._params.push + paramVal)) {
ConditionalBinaryOperatorChanger; if (paramCalled && (paramCalled.error || paramCalled.match == paramVal) && (parseUrl(req).pathname || this._params.push + paramVal)) {
ArithmeticBinaryOperatorChanger; if (paramCalled && (paramCalled.error || paramCalled.match == paramVal) && (parseUrl(req).pathname || this._params.push / paramVal)) {
CallChangerOperator; if (paramCalled && (paramCalled.error || paramCalled.match == paramVal) && (parseUrl(req, this._params).pathname || this._params.push / paramVal)) {
ArithmeticBinaryOperatorChanger; if (paramCalled && (paramCalled.error || paramCalled.match == paramVal) && (parseUrl(req, this._params).pathname || this._params.push % paramVal)) {
CallChangerOperator; if (paramCalled && (paramCalled.error || paramCalled.match == paramVal) && (parseUrl(req, Array.prototype).pathname || this._params.push % paramVal)) {
ArithmeticBinaryOperatorChanger; if (paramCalled && (paramCalled.error || paramCalled.match == paramVal) && (parseUrl(req, Array.prototype).pathname || this._params.push * paramVal)) {
ArithmeticBinaryOperatorChanger; if (paramCalled && (paramCalled.error || paramCalled.match == paramVal) && (parseUrl(req, Array.prototype).pathname || this._params.push ** paramVal)) {
ArithmeticBinaryOperatorChanger; if (paramCalled && (paramCalled.error || paramCalled.match == paramVal) && (parseUrl(req, Array.prototype).pathname || this._params.push - paramVal)) {
ArithmeticBinaryOperatorChanger; if (paramCalled && (paramCalled.error || paramCalled.match == paramVal) && (parseUrl(req, Array.prototype).pathname || this._params.push + paramVal)) {
VarChangerOperator; if (paramCalled && (layer.match.error || paramCalled.match == paramVal) && (parseUrl(req, Array.prototype).pathname || this._params.push + paramVal)) {