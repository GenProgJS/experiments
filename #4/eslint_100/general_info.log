---------------------------------- Statistics ----------------------------------
It took 2588.7632677555084 seconds to produce the 1th generation.
Best fitness: 11704.0
Worst fitness: 11704.0
Mean fitness: 11704.0
Population size: 20
"Best" modification so far: options.objectsInObjectsException && penultimateType === "ObjectExpression"
Number of repair candidates: 1
--------------------------------------------------------------------------------
---------------------------------- Statistics ----------------------------------
It took 1848.1099405288696 seconds to produce the 2th generation.
Best fitness: 11704.0
Worst fitness: 11704.0
Mean fitness: 11704.0
Population size: 20
"Best" modification so far: context.getSourceCode().getTokenBefore && penultimateType === "ObjectExpression"
Number of repair candidates: 1
--------------------------------------------------------------------------------
---------------------------------- Statistics ----------------------------------
It took 955.2052202224731 seconds to produce the 3th generation.
Best fitness: 11704.0
Worst fitness: 11704.0
Mean fitness: 11704.0
Population size: 20
"Best" modification so far: options.objectsInObjectsException && penultimate.value === "}"
Number of repair candidates: 1
--------------------------------------------------------------------------------
---------------------------------- Statistics ----------------------------------
It took 2156.547683954239 seconds to produce the 4th generation.
Best fitness: 11704.0
Worst fitness: 11704.0
Mean fitness: 11704.0
Population size: 20
"Best" modification so far: options.objectsInObjectsException && penultimateType === "ObjectExpression"
Number of repair candidates: 1
--------------------------------------------------------------------------------
---------------------------------- Statistics ----------------------------------
It took 1597.2414348125458 seconds to produce the 5th generation.
Best fitness: 11704.0
Worst fitness: 11704.0
Mean fitness: 11704.0
Population size: 20
"Best" modification so far: options && options.objectsInObjectsException && penultimateType == "ObjectExpression" && "ObjectExpression"
Number of repair candidates: 1
--------------------------------------------------------------------------------
---------------------------------- Statistics ----------------------------------
It took 2520.0737750530243 seconds to produce the 6th generation.
Best fitness: 11704.0
Worst fitness: 11704.0
Mean fitness: 11704.0
Population size: 20
"Best" modification so far: reportRequiredEndingSpace && penultimateType === "ObjectExpression"
Number of repair candidates: 2
--------------------------------------------------------------------------------
---------------------------------- Statistics ----------------------------------
It took 3557.239743709564 seconds to produce the 7th generation.
Best fitness: 11704.0
Worst fitness: 11704.0
Mean fitness: 11704.0
Population size: 20
"Best" modification so far: options.arraysInObjectsException && penultimateType === "ArrayExpression" ||
Number of repair candidates: 4
--------------------------------------------------------------------------------
---------------------------------- Statistics ----------------------------------
It took 2636.889596939087 seconds to produce the 8th generation.
Best fitness: 11704.0
Worst fitness: 11704.0
Mean fitness: 11704.0
Population size: 20
"Best" modification so far: options.arraysInObjectsException != penultimateType === "ArrayExpression" ||
Number of repair candidates: 4
--------------------------------------------------------------------------------
---------------------------------- Statistics ----------------------------------
It took 2573.3411593437195 seconds to produce the 9th generation.
Best fitness: 11704.0
Worst fitness: 11704.0
Mean fitness: 11704.0
Population size: 20
"Best" modification so far: options.arraysInObjectsException && penultimateType <= "ArrayExpression" ||
Number of repair candidates: 5
--------------------------------------------------------------------------------
---------------------------------- Statistics ----------------------------------
It took 2978.4144320487976 seconds to produce the 10th generation.
Best fitness: 11704.0
Worst fitness: 11704.0
Mean fitness: 11704.0
Population size: 20
"Best" modification so far: reportRequiredEndingSpace && penultimateType === "ObjectExpression"
Number of repair candidates: 6
--------------------------------------------------------------------------------
---------------------------------- Statistics ----------------------------------
It took 2678.1837182044983 seconds to produce the 11th generation.
Best fitness: 11704.0
Worst fitness: 11704.0
Mean fitness: 11704.0
Population size: 20
"Best" modification so far: context.getSourceCode && context.getSourceCode().getTokenBefore && penultimateType === "ObjectExpression"
Number of repair candidates: 6
--------------------------------------------------------------------------------
---------------------------------- Statistics ----------------------------------
It took 1868.8148670196533 seconds to produce the 12th generation.
Best fitness: 11704.0
Worst fitness: 11704.0
Mean fitness: 11704.0
Population size: 20
"Best" modification so far: options && options.objectsInObjectsException && penultimateType == "ObjectExpression" && "ObjectExpression"
Number of repair candidates: 7
--------------------------------------------------------------------------------
---------------------------------- Statistics ----------------------------------
It took 2711.23162651062 seconds to produce the 13th generation.
Best fitness: 11704.0
Worst fitness: 11704.0
Mean fitness: 11704.0
Population size: 20
"Best" modification so far: options.objectsInObjectsException && penultimateType === "ObjectExpression"
Number of repair candidates: 8
--------------------------------------------------------------------------------
---------------------------------- Statistics ----------------------------------
It took 2530.2394819259644 seconds to produce the 14th generation.
Best fitness: 11704.0
Worst fitness: 11704.0
Mean fitness: 11704.0
Population size: 20
"Best" modification so far: context.getSourceCode.getTokenAfter % penultimateType === "ArrayExpression" ||
Number of repair candidates: 8
--------------------------------------------------------------------------------
---------------------------------- Statistics ----------------------------------
It took 3164.2934925556183 seconds to produce the 15th generation.
Best fitness: 11704.0
Worst fitness: 11704.0
Mean fitness: 11704.0
Population size: 20
"Best" modification so far: options.objectsInObjectsException / options.objectsInObjectsException && penultimateType && "ObjectExpression"
Number of repair candidates: 9
--------------------------------------------------------------------------------
---------------------------------- Statistics ----------------------------------
It took 2827.755673646927 seconds to produce the 16th generation.
Best fitness: 11704.0
Worst fitness: 11704.0
Mean fitness: 11704.0
Population size: 20
"Best" modification so far: options.arraysInObjectsException != penultimateType === "ArrayExpression" ||
Number of repair candidates: 9
--------------------------------------------------------------------------------
---------------------------------- Statistics ----------------------------------
It took 3004.491375684738 seconds to produce the 17th generation.
Best fitness: 11704.0
Worst fitness: 11704.0
Mean fitness: 11704.0
Population size: 20
"Best" modification so far: options.arraysInObjectsException >= penultimateType < "ArrayExpression" ||
Number of repair candidates: 9
--------------------------------------------------------------------------------
---------------------------------- Statistics ----------------------------------
It took 3646.2900648117065 seconds to produce the 18th generation.
Best fitness: 11704.0
Worst fitness: 11704.0
Mean fitness: 11704.0
Population size: 20
"Best" modification so far: options.objectsInObjectsException / options.objectsInObjectsException && penultimateType && "ObjectExpression"
Number of repair candidates: 9
--------------------------------------------------------------------------------
---------------------------------- Statistics ----------------------------------
It took 3069.023346424103 seconds to produce the 19th generation.
Best fitness: 11704.0
Worst fitness: 11704.0
Mean fitness: 11704.0
Population size: 20
"Best" modification so far: options.arraysInObjectsException >> penultimateType < "ArrayExpression" ||
Number of repair candidates: 9
--------------------------------------------------------------------------------
---------------------------------- Statistics ----------------------------------
It took 2794.643429040909 seconds to produce the 20th generation.
Best fitness: 11704.0
Worst fitness: 11704.0
Mean fitness: 11704.0
Population size: 20
"Best" modification so far: options.objectsInObjectsException && penultimate.value >= "}" && penultimateType && "ObjectExpression"
Number of repair candidates: 9
--------------------------------------------------------------------------------
---------------------------------- Statistics ----------------------------------
It took 3202.8796491622925 seconds to produce the 21th generation.
Best fitness: 11704.0
Worst fitness: 11704.0
Mean fitness: 11704.0
Population size: 20
"Best" modification so far: context.getSourceCode().getTokenAfter / penultimateType < "ArrayExpression" ||
Number of repair candidates: 9
--------------------------------------------------------------------------------
---------------------------------- Statistics ----------------------------------
It took 2928.818211078644 seconds to produce the 22th generation.
Best fitness: 11704.0
Worst fitness: 11704.0
Mean fitness: 11704.0
Population size: 20
"Best" modification so far: options.objectsInObjectsException / options.objectsInObjectsException && penultimateType && "ObjectExpression"
Number of repair candidates: 9
--------------------------------------------------------------------------------
---------------------------------- Statistics ----------------------------------
It took 2334.7648496627808 seconds to produce the 23th generation.
Best fitness: 11704.0
Worst fitness: 11704.0
Mean fitness: 11704.0
Population size: 20
"Best" modification so far: context.getSourceCode().getTokenAfter % penultimateType * "ArrayExpression" ||
Number of repair candidates: 9
--------------------------------------------------------------------------------
---------------------------------- Statistics ----------------------------------
It took 3003.021171808243 seconds to produce the 24th generation.
Best fitness: 11704.0
Worst fitness: 11704.0
Mean fitness: 11704.0
Population size: 20
"Best" modification so far: options.objectsInObjectsException << sourceCode.getTokenBefore && penultimateType && 'objectexpression'
Number of repair candidates: 9
--------------------------------------------------------------------------------
---------------------------------- Statistics ----------------------------------
It took 3116.20575094223 seconds to produce the 25th generation.
Best fitness: 11704.0
Worst fitness: 11704.0
Mean fitness: 11704.0
Population size: 20
"Best" modification so far: options.objectsInObjectsException << sourceCode.getTokenBefore && penultimateType && 'objectexpression'
Number of repair candidates: 9
--------------------------------------------------------------------------------
---------------------------------- Statistics ----------------------------------
It took 3292.329184293747 seconds to produce the 26th generation.
Best fitness: 11704.0
Worst fitness: 11704.0
Mean fitness: 11704.0
Population size: 20
"Best" modification so far: context.getSourceCode().getTokenAfter <= penultimateType * "ArrayExpression" ||
Number of repair candidates: 9
--------------------------------------------------------------------------------
---------------------------------- Statistics ----------------------------------
It took 3069.431348323822 seconds to produce the 27th generation.
Best fitness: 11704.0
Worst fitness: 11704.0
Mean fitness: 11704.0
Population size: 20
"Best" modification so far: context.getSourceCode().getTokenAfter - penultimateType % "ArrayExpression" ||
Number of repair candidates: 9
--------------------------------------------------------------------------------
---------------------------------- Statistics ----------------------------------
It took 2183.6741235256195 seconds to produce the 28th generation.
Best fitness: 11704.0
Worst fitness: 11704.0
Mean fitness: 11704.0
Population size: 20
"Best" modification so far: context.getSourceCode().getTokenAfter ** penultimateType - "ArrayExpression" ||
Number of repair candidates: 9
--------------------------------------------------------------------------------
---------------------------------- Statistics ----------------------------------
It took 2753.0042114257812 seconds to produce the 29th generation.
Best fitness: 11704.0
Worst fitness: 11704.0
Mean fitness: 11704.0
Population size: 20
"Best" modification so far: context.getSourceCode().getTokenAfter % penultimateType && "ArrayExpression" ||
Number of repair candidates: 9
--------------------------------------------------------------------------------
---------------------------------- Statistics ----------------------------------
It took 1852.593340396881 seconds to produce the 30th generation.
Best fitness: 11704.0
Worst fitness: 11704.0
Mean fitness: 11704.0
Population size: 20
"Best" modification so far: context.getSourceCode().getTokenAfter * penultimateType % "ArrayExpression" ||
Number of repair candidates: 9
--------------------------------------------------------------------------------

-------------------------------- General info --------------------------------
Project: Eslint
Bug-ID: 100
Total elapsed time: 79532.61794805527 sec
Number of generated candidates: 9
------------------------------------------------------------------------------
