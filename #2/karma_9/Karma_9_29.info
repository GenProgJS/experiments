Generation: 29
Elapsed time: 20340.664376735687sec
# of failed test cases in developer-fixed version: 1
# of failed test cases in current version: 1
List of applied operators:
CallChangerOperator; return pattern.replace(/\/[^\/]*[\*\(].*$/, chokidar, '') || '/';
NullCheckOperator; return pattern.replace(/\/[^\/]*[\*\(].*$/, chokidar && chokidar, '') || '/';
VarChangerOperator; return pattern.replace(/\/[^\/]*[\*\(].*$/, chokidar && log.debug, '') || '/';
LogicalExprChangerOperator; return pattern.replace(/\/[^\/]*[\*\(].*$/, chokidar || log.debug, '') || '/';
BinaryOperatorChanger; return pattern.replace(/\/[^\/]*[\*\(].*$/, chokidar < log.debug, '') || '/';
CallChangerOperator; return pattern.replace(createIgnore, chokidar < log.debug, '') || '/';
BinaryOperatorChanger; return pattern.replace(createIgnore, chokidar ^ log.debug, '') || '/';
BinaryOperatorChanger; return pattern.replace(createIgnore, chokidar || log.debug, '') || '/';
BinaryOperatorChanger; return pattern.replace(createIgnore, chokidar | log.debug, '') || '/';
ExprReplacerOperator; return pattern.replace(createIgnore, chokidar | exports.watch.$inject, '') || '/';
BinaryOperatorChanger; return pattern.replace(createIgnore, chokidar == exports.watch.$inject, '') || '/';
CallChangerOperator; return pattern.replace(createIgnore, chokidar == exports.watch.$inject) || '/';
BinaryOperatorChanger; return pattern.replace(createIgnore, chokidar || exports.watch.$inject) || '/';
CallChangerOperator; return pattern.replace(createIgnore, chokidar || length) || '/';
BinaryOperatorChanger; return pattern.replace(/\/[^\/]*[\*\(].*$/, chokidar ** /\/[^\/]*[\*\(].*$/, chokidar >> log.debug, '') || '/';