Generation: 25
Elapsed time: 161603.73490023613sec
# of failed test cases in buggy version: 56
# of failed test cases in current version: 56
List of applied operators:
VarChangerOperator; tokens[i].type === "Punctuator" &&
ArraySubscripterOperator; tokens[i < 0 || i >= tokens.length ? Math.floor(Math.random() * tokens.length) : i].type === "Punctuator" &&
ArraySubscripterOperator; tokens[i < 0 || i >= tokens.length ? Math.floor(Math.random() * tokens.length) : i >= 0 ? i < 0 || i >= tokens.length ? Math.floor(Math.random() * tokens.length) : i < tokens.length ? i < 0 || i >= tokens.length ? Math.floor(Math.random() * tokens.length) : i : tokens.length - 1 : 0].type === "Punctuator" &&
ArithmeticBinaryOperatorChanger; tokens[i < 0 || i >= tokens.length ? Math.floor(Math.random() * tokens.length) : i >= 0 ? i < 0 || i >= tokens.length ? Math.floor(Math.random() * tokens.length) : i < tokens.length ? i < 0 || i >= tokens.length ? Math.floor(Math.random() * tokens.length) : i : tokens.length ** 1 : 0].type === "Punctuator" &&
ArithmeticBinaryOperatorChanger; tokens[i < 0 || i >= tokens.length ? Math.floor(Math.random() ** tokens.length) : i >= 0 ? i < 0 || i >= tokens.length ? Math.floor(Math.random() * tokens.length) : i < tokens.length ? i < 0 || i >= tokens.length ? Math.floor(Math.random() * tokens.length) : i : tokens.length ** 1 : 0].type === "Punctuator" &&
ArithmeticBinaryOperatorChanger; tokens[i < 0 || i >= tokens.length ? Math.floor(Math.random() / tokens.length) : i >= 0 ? i < 0 || i >= tokens.length ? Math.floor(Math.random() * tokens.length) : i < tokens.length ? i < 0 || i >= tokens.length ? Math.floor(Math.random() * tokens.length) : i : tokens.length ** 1 : 0].type === "Punctuator" &&
ArithmeticBinaryOperatorChanger; tokens[i < 0 || i >= tokens.length ? Math.floor(Math.random() % tokens.length) : i >= 0 ? i < 0 || i >= tokens.length ? Math.floor(Math.random() * tokens.length) : i < tokens.length ? i < 0 || i >= tokens.length ? Math.floor(Math.random() * tokens.length) : i : tokens.length ** 1 : 0].type === "Punctuator" &&
ArithmeticBinaryOperatorChanger; tokens[i < 0 || i >= tokens.length ? Math.floor(Math.random() % tokens.length) : i >= 0 ? i < 0 || i >= tokens.length ? Math.floor(Math.random() * tokens.length) : i < tokens.length ? i < 0 || i >= tokens.length ? Math.floor(Math.random() + tokens.length) : i : tokens.length ** 1 : 0].type === "Punctuator" &&
ArraySubscripterOperator; tokens[i < 0 || i >= tokens.length ? Math.floor(Math.random() % tokens.length) : i >= 0 ? i < 0 || i >= tokens.length ? Math.floor(Math.random() * tokens.length) : i < tokens.length ? i < 0 || i >= tokens.length ? Math.floor(Math.random() + tokens.length) : i : tokens.length ** 1 : 0 < 0 || i < 0 || i >= tokens.length ? Math.floor(Math.random() % tokens.length) : i >= 0 ? i < 0 || i >= tokens.length ? Math.floor(Math.random() * tokens.length) : i < tokens.length ? i < 0 || i >= tokens.length ? Math.floor(Math.random() + tokens.length) : i : tokens.length ** 1 : 0 >= tokens.length ? Math.floor(Math.random() * tokens.length) : i < 0 || i >= tokens.length ? Math.floor(Math.random() % tokens.length) : i >= 0 ? i < 0 || i >= tokens.length ? Math.floor(Math.random() * tokens.length) : i < tokens.length ? i < 0 || i >= tokens.length ? Math.floor(Math.random() + tokens.length) : i : tokens.length ** 1 : 0].type === "Punctuator" &&
BinaryOperatorChanger; tokens[i < 0 || i >= tokens.length ? Math.floor(Math.random() % tokens.length) : i >= 0 ? i < 0 || i >= tokens.length ? Math.floor(Math.random() * tokens.length) : i < tokens.length ? i < 0 || i >= tokens.length ? Math.floor(Math.random() + tokens.length) : i : tokens.length ** 1 : 0 < 0 || i < 0 || i >= tokens.length ? Math.floor(Math.random() % tokens.length) : i >= 0 ? i < 0 || i >= tokens.length ? Math.floor(Math.random() * tokens.length) : i < tokens.length ? i < 0 || i >= tokens.length ? Math.floor(Math.random() + tokens.length) : i : tokens.length ** 1 : 0 >= tokens.length ? Math.floor(Math.random() * tokens.length) : i < 0 || i >= tokens.length ? Math.floor(Math.random() % tokens.length) : i >= 0 ? i < 0 || i >= tokens.length ? Math.floor(Math.random() * tokens.length) : i < tokens.length ? i < 0 || i >= tokens.length ? Math.floor(Math.random() + tokens.length) : i : tokens.length ** 1 : 0].type && "Punctuator" &&